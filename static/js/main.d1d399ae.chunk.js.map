{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewKegForm.js","components/Keg.js","components/KegList.js","components/KegDetail.js","components/EditKegForm.js","components/KegData.js","components/KegControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","id","style","color","href","aria-current","ReusableForm","Fragment","onSubmit","formSubmissionHandler","type","name","placeholder","min","buttonText","NewKegForm","backgroundColor","event","preventDefault","onNewKegCreation","brand","target","value","region","abv","parseInt","ibu","price","pints","v4","Keg","alert","fontSize","onClick","whenKegClicked","KegList","kegList","map","keg","class","onKegSelection","key","KegDetail","onClickingDelete","onClickingIncrease","onClickingDecrease","buyButton","onClickingEdit","EditKegForm","onEditKeg","KegData","KegControl","handleClick","state","selectedKeg","setState","formVisibleOnPage","editing","prevState","handleAddingNewKegToList","newKeg","newMainKegList","mainKegList","concat","handleChangingSelectedKeg","filter","handleDeletingKeg","handleEditClick","handleEditingKegInList","kegToEdit","editedMainKegList","handleIncreasingKegStock","console","log","handleDecreasingKegStock","currentlyVisibleState","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d1d399ae.chunk.js","sourcesContent":["import React from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nconst Header = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" id=\"logo\" style={{color: \"orangered\"}} href=\"/\"><h2><em>Michelob Angelo's Piet√†proom</em></h2><p><em>International Artisanal Tap House</em></p></a>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" style={{color: \"orangered\"}} aria-current=\"page\" href=\"/\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" style={{color: \"orangered\"}} href=\"/\">Menu</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" style={{color: \"orangered\"}} href=\"/\">Locations</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" style={{color: \"orangered\"}} href=\"/\">Contact</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ReusableForm(props) {\n  return (\n    <React.Fragment>\n      <form onSubmit={props.formSubmissionHandler}>\n        <input\n          type=\"text\"\n          name=\"brand\"\n          placeholder=\"Name\" />\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Style\" />\n        <input\n          type=\"text\"\n          name=\"region\"\n          placeholder=\"Region\" />\n        <input\n          type=\"number\"\n          min={1}\n          name=\"abv\"\n          placeholder=\"ABV\" />\n        <input\n          type=\"number\"\n          min={1}\n          name=\"ibu\"\n          placeholder=\"IBU\" />\n        <input\n          type=\"number\"\n          min={1}\n          name=\"price\"\n          placeholder=\"Price\" />\n        <input \n          type=\"number\"\n          min={1}\n          name=\"pints\"\n          placeholder=\"Number of Pints\" />\n          <br/>\n          <br/>\n          <button className=\"btn shadow mr-2 updateBtn btn-outline-secondary\" type='submit'>{props.buttonText}</button>\n      </form>\n      <hr />\n      <br/>\n      <h4>Keg Sizing Information</h4>\n      <br/>\n      <ul>\n        <p>1/2 barrel = 15.5 gallons = <strong>124 pints</strong> = 165 12oz bottles - <strong>(Full Size Keg)</strong></p>\n        <p>1/4 barrel = 7.75 gallons = <strong>62 pints</strong> = 83 12oz bottles - <strong>(Pony Keg)</strong></p>\n        <p>1/6 barrel (20 Ltr) = 5.2 gallons = <strong>41 pints</strong> = 55 12oz bottles - <strong>(Sixtel)</strong></p>\n        <p>50 Liter = 13.2 gallons = <strong>105 pints</strong> = 140 12oz bottles</p>\n        <p>30 liter = 8.1 gallons = <strong>64 pints</strong> = 86 12oz bottles</p>\n      </ul>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string,\n  formText: PropTypes.string\n}; \n\nexport default ReusableForm;","\nimport React from 'react'\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types'\nimport ReusableForm from './ReusableForm';\n\nfunction NewKegForm(props) {\n  function handleNewKegFormSubmission(event) {\n    event.preventDefault();\n    props.onNewKegCreation({\n      brand: event.target.brand.value, \n      name: event.target.name.value, \n      region: event.target.region.value, \n      abv: parseInt(event.target.abv.value), \n      ibu: parseInt(event.target.ibu.value), \n      price: parseInt(event.target.price.value), \n      pints: parseInt(event.target.pints.value), \n      id: v4()});\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"card shadow-lg h-100 text-left card body Font p-4 w-50 mx-auto\" style={{backgroundColor: \"white\"}}>\n        <h1 id=\"banner\" className=\"headingFont\" style={{backgroundColor: \"#add8e6\", color: \"black\"}}>Add a New Keg</h1>\n        <hr />\n        <ReusableForm \n          formSubmissionHandler={handleNewKegFormSubmission}\n          buttonText='Add Keg!' />\n      </div>\n    </React.Fragment>\n  )\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n}\n\nexport default NewKegForm","// import React from 'react'\n// import PropTypes from 'prop-types'\n\n\n// function Keg(props) {\n//   const stockCheck = props.pints === 0 ? \"Out of Stock\" : props.pints;\n  \n//   return (\n//     <React.Fragment>\n//       <div onClick= {() => props.whenKegClicked(props.id)}>\n//         <h3>{props.brand}</h3>\n//         <h5>{props.name}</h5>\n//         <p>Region: <em>{props.region}</em></p>\n//         <p>ABV: <em>{props.abv}%</em></p>\n//         <p>IBU: <em>{props.ibu}</em></p>\n//         <p>Price: <em>${props.price}</em></p>\n//         <p>Pints available: <em>{stockCheck}</em></p>\n//         {/* <hr /> */}\n//       </div>\n//     </React.Fragment>\n//   );\n// }\n\n// Keg.propTypes = {\n//   brand: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   region: PropTypes.string.isRequired,\n//   abv: PropTypes.number.isRequired,\n//   ibu: PropTypes.number.isRequired,\n//   price: PropTypes.number.isRequired,\n//   pints: PropTypes.number.isRequired,  \n//   id: PropTypes.string,\n//   whenKegClicked: PropTypes.func\n// }\n\n// export default Keg;\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n\nfunction Keg(props) {\n  let sellQuantity;\n  let alert = <p style={{color: \"#0086b3\", fontSize: 16}}>In Stock</p>;\n\n  if (props.pints !== 0){\n    sellQuantity = props.pints - 1;\n    if (sellQuantity < 10){\n      alert = <p style={{color:\"#f4501e\", fontSize: 16}}>Almost Empty</p>;\n    };\n  } else {\n    alert = <p style={{color:\"darkred\", fontSize: 16}}>Out of Stock</p>;\n  };\n\n  return (\n    <React.Fragment>\n      <div onClick= {() => props.whenKegClicked(props.id)}>\n        <span><strong>{alert}</strong></span>\n        <h3>{props.brand}</h3>\n        <h5>{props.name}</h5>\n        <p>Region: <em>{props.region}</em></p>\n        <hr id=\"cardhr\" />\n        <p>ABV: <em>{props.abv}%</em></p>\n        <p>IBU: <em>{props.ibu}</em></p>\n        <p>Price: <em><strong>${props.price}</strong></em></p>\n        <hr id=\"cardhrlow\" />\n        <p>Pints available: <em>{props.pints}</em></p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nKeg.propTypes = {\n  brand: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  region: PropTypes.string.isRequired,\n  abv: PropTypes.number.isRequired,\n  ibu: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  pints: PropTypes.number.isRequired,  \n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func,\n  whenSellClicked: PropTypes.func,\n  whenRestockCicked: PropTypes.func\n}\n\nexport default Keg;","import React from 'react';\nimport Keg from './Keg';\nimport PropTypes from 'prop-types'\n\nfunction KegList(props) {\n  return (\n    <React.Fragment>\n      <h1 className=\"headingFont\" style={{color: \"black\"}}>Currently On Tap</h1>\n      <hr />\n      <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-3\">\n      \n      {props.kegList.map((keg) => \n        <div class=\"col mb-4\">\n          <div id=\"card\" className=\"card shadow-lg h-100 text-left\" >\n            <br/>\n            <Keg\n              whenKegClicked = {props.onKegSelection}\n              name={keg.name}\n              brand={keg.brand}\n              region={keg.region}\n              abv={keg.abv}\n              ibu={keg.ibu}\n              price={keg.price}\n              pints={keg.pints}\n              id={keg.id}\n              key={keg.id}/>\n          </div>\n        </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nKegList.propTypes = {\n  kegList: PropTypes.array,\n  onKegSelection: PropTypes.func\n};\n\nexport default KegList","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction KegDetail(props) {\n  const { keg, onClickingDelete, onClickingIncrease, onClickingDecrease } = props;\n  const pints = keg.pints === 0 ? \"Out of Stock\" : keg.pints;\n  const buyButton = keg.pints === 0 ? <p></p> : <button className=\"btn shadow mr-2 btn-info\" onClick={() => onClickingDecrease(keg.id)}>Buy</button>\n  return (\n    <React.Fragment>\n      <div className=\"card shadow-lg w-75 mx-auto\" style={{fontSize: 24, color: \"black\"}}>\n        <div className=\"headingFont card-header text-center text-black\" style={{fontSize: 24, backgroundColor: \"#ffdcd2\", color: \"black\"}}><em>Keg Details</em></div>\n          <div className=\"card-body\">\n            <div class=\"row\">\n              <h2><strong>{keg.brand}</strong></h2>\n            </div>\n            <h3><strong>{keg.name}</strong></h3>\n            <h5><em>{keg.region}</em></h5>\n            <hr />\n            <p>ABV: <em>{keg.abv}%</em></p>\n            <p>IBU: <em>{keg.ibu}</em></p>\n            <p>Price: <em><strong>${keg.price}</strong></em></p>\n            <p>Pints Available: <em>{pints}</em></p>\n          </div>\n          <div className=\"card-footer justify-content-center\" style={{backgroundColor: \"white\"}}>\n          {buyButton}\n          <br/>\n            <button onClick={props.onClickingEdit} className=\"btn shadow mr-2 updateBtn btn-outline-secondary\">Update Keg</button>\n            <button onClick={() => onClickingDelete(keg.id)} className=\"btn shadow deleteBtn btn-outline-secondary\">Delete Keg</button>\n            <button onClick={() => onClickingIncrease(keg.id)} className=\"btn shadow deleteBtn btn-outline-secondary\">Restock</button>\n          </div>\n        </div>\n    </React.Fragment>\n  );\n}\n\nKegDetail.propTypes = {\n  keg: PropTypes.object,\n  onClickingDelete: PropTypes.func,\n  onClickingEdit: PropTypes.func,\n  onClickingIncrease: PropTypes.func,\n  onClickingDecrease: PropTypes.func\n}\n\nexport default KegDetail","import React from 'react'\nimport ReusableForm from './ReusableForm';\nimport PropTypes from 'prop-types';\n\n\nfunction EditKegForm(props) {\n  const { keg } = props;\n\n  function handleEditKegFormSubmission(event) {\n    event.preventDefault();\n    props.onEditKeg({\n      brand: event.target.brand.value, \n      name: event.target.name.value, \n      region: event.target.region.value, \n      abv: parseInt(event.target.abv.value), \n      ibu: parseInt(event.target.ibu.value), \n      pints: parseInt(event.target.pints.value), \n      price: parseInt(event.target.price.value), \n      id: keg.id\n    });\n  }\n  return (\n    <React.Fragment>\n      <div className=\"card shadow-lg h-100 text-left card bodyFont p-4 w-50 mx-auto\" style={{backgroundColor: \"white\"}}>\n      <h1 id=\"banner\" className=\"headingFont\" style={{backgroundColor: \"#add8e6\", color: \"black\"}}>Update This Keg</h1>\n        <hr />\n      <ReusableForm\n        formSubmissionHandler={handleEditKegFormSubmission}\n        buttonText='Update Keg' />\n      </div>\n    </React.Fragment>\n  );\n}\n\nEditKegForm.propTypes = {\n  keg: PropTypes.object,\n  onEditKeg: PropTypes.func\n}\n\nexport default EditKegForm\n","import { v4 } from 'uuid';\n\nconst KegData = [\n  {\n    brand: \"Frida K-ALE-o\",\n    name: \"Cerveza Especial w/ lim√≥n and thorns\",\n    region: \"Central Mexico\",\n    abv: 5,\n    ibu: 43,\n    price: 6,\n    pints: 124,\n    id: v4()\n  },\n  {\n    brand: \"Lumber Jack Whitten\",\n    name: \"Quadruple IPA\",\n    region: \"Pacific Northwest, USA\",\n    abv: 9,\n    ibu: 72,\n    price: 7,\n    pints: 124,\n    id: v4()\n  },\n  {\n    brand: \"Slurry Night\",\n    name: \"CBD/CBN infused Stout w/ NyQuil Shot\",\n    region: \"Southern France\",\n    abv: 11,\n    ibu: 38,\n    price: 9,\n    pints: 124,\n    id: v4()\n  },\n  {\n    brand: \"Pipilotti Rist-slap\",\n    name: \"Sassafras Witbier w/ slap bracelet\",\n    region: \"Switzerland\",\n    abv: 5,\n    ibu: 32,\n    price: 6,\n    pints: 124,\n    id: v4()\n  },\n  {\n    brand: \"Jackson Pollock's Last Joyride\",\n    name: \"Gin-soaked Dark Ale\",\n    region: \"New England, USA\",\n    abv: 22,\n    ibu: 66,\n    price: 15,\n    pints: 124,\n    id: v4()\n  },\n  {\n    brand: \"Vincent Van GoGo\",\n    name: \"Poppy milk Espresso Belgian Strong Pale Ale\",\n    region: \"Netherlands/Belgium\",\n    abv: 9,\n    ibu: 51,\n    price: 8,\n    pints: 124,\n    id: v4()\n  },\n  \n]\n\nexport default KegData;","import React from 'react';\n// import { v4 } from 'uuid';\nimport NewKegForm from './NewKegForm';\nimport KegList from './KegList';\nimport KegDetail from './KegDetail';\nimport EditKegForm from './EditKegForm';\nimport KegData from './KegData';\n\nclass KegControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      mainKegList: KegData,\n      selectedKeg: null,\n      editing: false\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedKeg != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedKeg: null,\n        editing: false\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage \n      }));\n    } \n  }\n\n  handleAddingNewKegToList = (newKeg) => {\n    const newMainKegList = this.state.mainKegList.concat(newKeg);\n    this.setState({\n      mainKegList: newMainKegList,\n      formVisibleOnPage: false\n    });\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const selectedKeg =this.state.mainKegList.filter(keg => keg.id === id)[0];\n    this.setState({selectedKeg: selectedKeg});\n  }\n\n  handleDeletingKeg = (id) => {\n    const newMainKegList = this.state.mainKegList.filter(keg => keg.id !== id);\n    this.setState({\n      mainKegList: newMainKegList,\n      selectedKeg: null\n    });\n  }\n\n  handleEditClick = () => {\n    this.setState({editing:true});\n  }\n\n  handleEditingKegInList = (kegToEdit) => {\n    const editedMainKegList = this.state.mainKegList\n      .filter(keg => keg.id !== this.state.selectedKeg.id)\n      .concat(kegToEdit);\n    this.setState({\n      mainKegList: editedMainKegList,\n      editing: false,\n      selectedKeg: null\n    });\n  }\n\n  handleIncreasingKegStock = (id) => {\n    const selectedKeg = this.state.mainKegList.filter(keg => keg.id === id)[0]\n      selectedKeg.pints++;\n      console.log(\"Current pint: \" + this.state.mainKegList.concat(selectedKeg));\n      const newMainKegList = this.state.mainKegList.filter(keg => keg.id !==id).concat(selectedKeg);\n      this.setState({mainKegList:newMainKegList});\n  }\n\n\n  handleDecreasingKegStock = (id) => {\n    const selectedKeg = this.state.mainKegList.filter(keg => keg.id === id)[0]\n    {\n      selectedKeg.pints--;\n      const newMainKegList = this.state.mainKegList.filter(keg => keg.id !==id).concat(selectedKeg);\n      this.setState({mainKegList:newMainKegList});\n    } \n  }\n\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if (this.state.editing) {\n      currentlyVisibleState = <EditKegForm keg = {this.state.selectedKeg} onEditKeg = {this.handleEditingKegInList}/>\n      buttonText = \"Return to Tap List\";\n    } else if(this.state.selectedKeg != null) {\n      currentlyVisibleState = <KegDetail \n        keg={this.state.selectedKeg}\n        onClickingDecrease={this.handleDecreasingKegStock}\n        onClickingIncrease={this.handleIncreasingKegStock}\n        onClickingDelete={this.handleDeletingKeg}\n        onClickingEdit={this.handleEditClick} />\n      buttonText= \"Return to Tap List\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList}/>\n      buttonText = \"Return to Tap List\";\n    } else {\n      currentlyVisibleState = <KegList kegList={this.state.mainKegList} onKegSelection = {this.handleChangingSelectedKeg}/>\n      buttonText = \"Add Keg\";\n    }\n\n    return(\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button className=\"btn shadow deleteBtn btn-outline-secondary\" onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default KegControl;","import '../App.css';\nimport React from 'react';\nimport Header from './Header';\nimport KegControl from './KegControl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"text-center\" style={{backgroundColor: '#212529'}}>\n        <Header />\n      </div>\n      <div className=\"container mb-5\">\n        <div className=\"text-center\">\n          <KegControl />\n        </div>\n      </div>\n    </React.Fragment>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}